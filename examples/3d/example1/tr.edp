load "msh3"
load "tetgen"
load "medit"

real Lx = pi, Ly = pi, Lz = pi;
int Kx = 10, Ky = 10, Kz = 10;

real x0, x1, y0, y1;

/////////////////////////////////
x0 = 0.;  x1 = Lx;  y0 = 0.;  y1 = Ly;
mesh Thsq1 = square(Kx, Ky, [x0 + (x1 - x0) * x, y0 + (y1 - y0) * y]);

func XX1 = x;
func YY1 = y;
func ZZ1min = 0;
func ZZ1max = Lz;

int[int] ref31h = [0,12];
int[int] ref31b = [0,11];

mesh3 Th31h = movemesh23(Thsq1, transfo = [XX1, YY1, ZZ1max], label = ref31h, orientation = 1);
mesh3 Th31b = movemesh23(Thsq1, transfo = [XX1, YY1, ZZ1min], label = ref31b, orientation = -1);


/////////////////////////////////
x0 = 0.;  x1 = Lx;  y0 = 0.;  y1 = Lz;
mesh Thsq2 = square(Kx, Kz, [x0 + (x1 - x0) * x, y0 + (y1 - y0) * y]);

func ZZ2 = y;
func XX2 = x;
func YY2min = 0.;
func YY2max = Ly;

int[int] ref32h = [0,13];
int[int] ref32b = [0,14];

mesh3 Th32h = movemesh23(Thsq2, transfo = [XX2, YY2max, ZZ2], label = ref32h, orientation = -1);
mesh3 Th32b = movemesh23(Thsq2, transfo = [XX2, YY2min, ZZ2], label = ref32b, orientation = 1);


/////////////////////////////////
x0 = 0.;  x1 = Ly;  y0 = 0.;  y1 = Lz;
mesh Thsq3 = square(Ky, Kz, [x0 + (x1 - x0) * x, y0 + (y1 - y0) * y]);

func YY3 = x;
func ZZ3 = y;
func XX3min = 0;
func XX3max = Lx;

int[int] ref33h = [0,15];
int[int] ref33b = [0,16];

mesh3 Th33h = movemesh23(Thsq3, transfo = [XX3max, YY3, ZZ3], label = ref33h, orientation = 1);
mesh3 Th33b = movemesh23(Thsq3, transfo = [XX3min, YY3, ZZ3], label = ref33b, orientation = -1);

////////////////////////////////
mesh3 Th33 = Th31h + Th31b + Th32h + Th32b + Th33h + Th33b;  // "gluing" surface meshs to obtain the surface of cube
// medit("glumesh", Th33);
// savemesh(Th33, "Th33.mesh");

// build a mesh of a axis parallel box with TetGen
real[int] domain = [Lx / 2, Ly / 2, Lz / 2, 145, 100.];
mesh3 Th = tetg(Th33, switch = "pqaAAYYQ", nbofregions = 1, regionlist = domain);  // Tetrahelize the interior of the cube with tetgen
medit("tetg", Th);
savemesh(Th, "tr.mesh");
